---
# tasks file for skeleton
- name : Fail when distribution is not ubuntu
  ansible.builtin.fail:
    msg: This playbook will fail if the distribution is other than ubuntu
  when : ansible_facts['distribution'] != 'Ubuntu'
    
- name : install java
  ansible.builtin.apt :
    name : "{{ java_package }}"
    update_cache: yes
    state : present
    
- name : add group
  ansible.builtin.group:
    name : "{{ group_name }}"
    state : present
    
- name: Add tomcat user on ubuntu
  ansible.builtin.user:
    name: "{{ user_name }}"
    create_home : true
    home : "{{ home_directory }}"
    group : "{{ group_name }}"
    shell : "{{ default_shell }}"
    state : present
    
- name : Get tomcat stats
  ansible.builtin.stat:
    path : "{{ home_directory }}/apache-tomcat-{{ tomcat_version }}"
    register: tomcat_folder

- name : print stats
  ansible.builtin.debug:
    var : tomcat_folder.stat.exists
    
- name : download and extract  tomcat
  ansible.builtin.unarchive:
    src: https://www-eu.apache.org/dist/tomcat/tomcat-10/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz 
    dest: "{{ home_directory }}"
    remote_src: yes
  when : tomcat_folder.stat.exists == false
  notify:
    - Add executable permission to other files
           
- name : create symbolic link
  ansible.builtin.file:
    src: "{{ home_directory }}/apache-tomcat-{{ tomcat_version }}"
    dest: "{{ home_directory }}/latest"
    owner: "{{ user_name }}"
    group: "{{ group_name }}"
    state: link

- name : Recursivly change the ownership of directory
  ansible.builtin.file:
    path : "{{ home_directory }}"
    state: directory
    recurse: yes
    owner: "{{ user_name }}"
    group: "{{ group_name }}"

- name : copy context to tomcat service
  ansible.builtin.copy:
    src: tomcat.service
    dest: /etc/systemd/system/tomcat.service
    owner: "{{ user_name }}"
    group: "{{ group_name }}"    

- name : Enable and start tomcat service
  ansible.builtin.systemd:
    name : tomcat
    enabled: true
    state: started

- name : Adding tomcat configuration
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - {src : tomcat-users.xml, dest : /opt/tomcat/latest/conf/tomcat-users.xml }
    - {src: context.xml , dest : /opt/tomcat/latest/webapps/manager/META-INF/context.xml}
    - {src: context.xml , dest : /opt/tomcat/latest/webapps/host-manager/META-INF/context.xml}
  notify:
    - restart tomcat service